# Generated by Django 3.1.7 on 2021-04-14 19:07

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Predict',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_patient', models.CharField(max_length=200, validators=[django.core.validators.MinLengthValidator(2, 'Name must be greater than 2 characters')])),
                ('xray', models.BinaryField(editable=True, null=True)),
                ('xray_truth', models.BinaryField(editable=True, null=True)),
                ('xray_predicted', models.BinaryField(editable=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('xray_content_type', models.CharField(help_text='The MIMEType of the xray file', max_length=256, null=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Verification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('verification', models.TextField(validators=[django.core.validators.MinLengthValidator(3, 'Comment must be greater than 3 characters')])),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('predict', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='predicts.predict')),
            ],
        ),
        migrations.AddField(
            model_name='predict',
            name='verifications',
            field=models.ManyToManyField(related_name='verification_owned', through='predicts.Verification', to=settings.AUTH_USER_MODEL),
        ),
    ]
